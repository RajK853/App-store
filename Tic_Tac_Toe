#Tic tac toe (own version)

import random
import time

def drawBoard(board):    
    print("            "+"  " + board[7] + "  |  " + board[8] + "   | " + board[9])
    print("            "+"- - - - - - - - - -")
    print("            "+"  " + board[4] + "  |  " + board[5] + "   | " + board[6])
    print("            "+"- - - - - - - - - -")
    print("            "+"  " + board[1] + "  |  " + board[2] + "   | " + board[3])

def inputUserLetter():
    inputLetter = " "
    while inputLetter not in "OX":
        print("Choose your letter (X/O)")
        inputLetter = input().upper()
    if inputLetter == "X":
        return ["X", "O"]
    else:
        return ["O", "X"]

def whoGoesFirst():
    if random.randint(0,1) == 1:
        return "Computer"
    else:
        return "Player"

def isFree(board, move):
    return board[move] == " "

def makeMove(board, move, letter):
    board[move] = letter

def isWinner(bo, le):
    return ((bo[7] == le and bo[8] == le and bo[9] == le) # across the top
            or (bo[4] == le and bo[5] == le and bo[6] == le) # across the mid
            or (bo[1] == le and bo[2] == le and bo[3] == le) # across the bot
            or (bo[7] == le and bo[4] == le and bo[1] == le) # down the left side
            or (bo[8] == le and bo[5] == le and bo[2] == le) # down the mid
            or (bo[9] == le and bo[6] == le and bo[3] == le) # down the right side
            or (bo[7] == le and bo[5] == le and bo[3] == le) # diagonal (\)
            or (bo[9] == le and bo[5] == le and bo[1] == le)) # diagonal (/)

def isFull(board):
    for i in range(1, 10):
        if isFree(board, i):
            return False
    return True

def playerMove(board):
    move = " "
    while move not in "1 2 3 4 5 6 7 8 9".split() or not isFree(board, int(move)):
        print("Where do you want to make your move? (1-9)")
        move = input()
    return int(move)

def copyBoard(board):
    copy = []
    for i in board:
        copy.append(i)
    return copy

def chooseRandomMove(board, movelist):
    possibleMoves = []
    for i in movelist:
        if isFree(board, i):
            possibleMoves.append(i)

    if len(possibleMoves) != 0:
        return random.choice(possibleMoves)
    else:
        return None

def computerMove(board, computerLetter):
    if computerLetter == "X":
        playerLetter = "O"
    else:
        playerLetter = "X"

    # Make winning move.
    for i in range(1,10):
        copy = copyBoard(board)
        if isFree(copy, i):
            makeMove(copy, i, computerLetter)
            if isWinner(copy, computerLetter):
                return i

    # Stop player from winning.
    for i in range(1,10):
        copy = copyBoard(board)
        if isFree(copy, i):
            makeMove(copy, i, playerLetter)
            if isWinner(copy, playerLetter):
                return i

    # Make move to corner.
    move = chooseRandomMove(board, [1, 3, 7, 9])
    if move != None:
        return move

    # Make move in center.
    if isFree(board, 5):
        return 5

    # Make move to remaining  spaces.
    return chooseRandomMove(board, [2, 4, 6, 8])

def playAgain():
    return input("Do you want to play again? ").lower().startswith("y")


while True:
    print()
    print("Welcome to Tic Tac Toe.")
    board = [" "]*10
    playerLetter, computerLetter = inputUserLetter()
    turn = whoGoesFirst()
    print(turn + " will go first.")
    gameGoing = True
    
    while gameGoing:
        if turn == "Player":
            drawBoard(board)
            move = playerMove(board)
            makeMove(board, move, playerLetter)
            if isWinner(board, playerLetter):
                drawBoard(board)
                print("Congrats! You won the computer.")
                gameGoing = False
            else:
                if isFull(board):
                    drawBoard(board)
                    print("Board full! It's a tie.")
                    break
                else:
                    turn = "Computer"

        else:
            move = computerMove(board, computerLetter)
            makeMove(board, move, computerLetter)
            if isWinner(board, computerLetter):
                drawBoard(board)
                print("You lose! Computer defeated you.")
                gameGoing = False
            else:
                if isFull(board):
                    drawBoard(board)
                    print("Board full! It's a tie.")
                    break
                else:
                    turn = "Player"
    if not playAgain():
        print("Thanks for playing.")
        time.sleep(1.5)
        break
    
