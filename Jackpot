import time,  random

allSame = {"Cherry" : 3, "Apple" : 5, "Bell" : 7, "7" : 10, "Bar" : 20, "Skull" : -3}
twoSame = {"Cherry" : 2, "Apple" : 4, "Bell" : 6, "Skull" : -2}
symbols = ("Cherry Apple Bell Bar Skull 7").split()

def board(coins): #Shows the board and the rules
    print()
    print("- - - - - - - - - - - - - - - - - - JACKPOT - - - - - - - - - - - - - - - - - -")
    print("                           "+"["+slot[0]+"]", end = " ")
    time.sleep(0.5)
    print("- ["+slot[1]+"]", end = " ")
    time.sleep(0.5)
    print("- ["+slot[2]+"]")
    time.sleep(2)
    print('''
Rules (per coin inserted):
2 x Cherries =  2 Coins                      3 x Cherries = 3 Coins
2 x Apples   =  4 Coins                      3 x Apples = 5 Coins
2 x Bells    =  6 Coins                      3 x Bells = 7 Coins
2 x Skulls   = -2 Coins                      3 x "7" = 10 Coins
3 x Skulls   = -3 Coins                      3 x Bars = 20 Coins''')
    time.sleep(3)
    
    if slot[0] == slot[1] and slot[1] == slot[2]:   # If all are symbols are same
        bonus = allSame[slot[0]]*coinIn             # Goes to allSame dictionary and assigns the value associated with each key (symbol)
        print()
        print(str(bonus)+" coins bonus!!")
        print(str(coins)+" coins plus "+str(bonus)+" bonus.")
        coins = coins + bonus
        return coins
    elif slot[0] == slot[1] or slot[1] == slot[2] or slot[0] == slot[2]:
        if slot[1] == slot[0] and slot[1] != "7" and slot[1] != "Bar":  # If 1st and 2nd items are same but not a bar or "7".
            bonus = twoSame[slot[1]]*coinIn             #Goes to twoSame dictionary and assigns the value associated with each key (symbol)
            print()
            print(str(bonus)+" coins bonus!!")
            print(str(coins)+" coins plus "+str(bonus)+" bonus.")
            coins = coins + bonus
            return coins
        elif slot[1] == slot[2] and slot[1] != "7" and slot[1] != "Bar":    # If 2nd and 3rd items are same but not a bar or "7".
            bonus = twoSame[slot[1]]*coinIn
            print()
            print(str(bonus)+" coins bonus!!")
            print(str(coins)+" coins plus "+str(bonus)+" bonus.")
            coins = coins + bonus
            return coins
        elif slot[0] == slot[2] and slot[0] != "7" and slot[0] != "Bar":    # If 1st and 3rd items are same but not a bar or "7".
            bonus = twoSame[slot[0]]*coinIn
            print()
            print(str(bonus)+" coins bonus!!")
            print(str(coins)+" coins plus "+str(bonus)+" bonus.")
            coins = coins + bonus
            return coins
        else:
            print()
            wrong = {0 : "Better luck next time "+userName+".", 1 : "Try again "+userName+".", 2 : "Seems like this isn't your lucky day "+userName+"."}
            x = random.randint(0,2)
            print(wrong[x])
            return coins
    else:   # If all slots are different.
        if slot[0] == "Lets":
            return coins
        else:
            print()
            wrong = {0 : "Better luck next time "+userName+".", 1 : "Try again "+userName+".", 2 : "Seems like this isn't your lucky day "+userName+"."}
            x = random.randint(0,2)
            print(wrong[x])
            return coins
    
def getCoin(): # Takes valid input from user
    while True:
        print()
        print("Insert coins "+userName+" or type exit. (Max 4 coins)")
        insertCoin = input().lower()
        if insertCoin not in "0123456789" and insertCoin != "exit":
            print("Invalid number detected! "+userName+", please enter valid number of coins.")
        elif insertCoin == "" or insertCoin == "0":
            print("Please insert a coin "+userName+".")
        elif insertCoin.startswith("e"):
            print("Thanks for playing Jackpot.")
            time.sleep(1)
            sys.exit()
        elif int(insertCoin) > 4:
            print("Coins out of limit! Max number of coins allowed is 4.")
        elif int(insertCoin) > coins:
            print(userName+", you cannot insert "+str(insertCoin)+" as you have only "+str(coins)+" coins.")
        else:
            return int(insertCoin)

def spin():
    for i in range(3):
        x = random.randint(0, len(symbols)-1)
        slot[i] = symbols[x]
    return [slot[0], slot[1], slot[2]]

def playAgain():
    print("Do you want to play again "+userName+"? (Y/N)")
    return input().lower().startswith("y")

print()
userName = input("Enter your name: ")
slot = ["Lets", "Start", "Game"]
gameDone = False
coins = 20
while True:
    coins = board(coins)
    print()
    print("Coins left: "+str(coins))
    if coins < 1:
        print()
        print("All coins finished")
        if playAgain():
            coins = 20
            print()
            print("Enter your name:")
            userName = input()
            slot = ["Lets", "Start", "Game "]
            gameDone = False
        else:
            print("Thanks for playing.")
            time.sleep(0.5)
            break
    else:
        coinIn = getCoin()
        coins = coins - coinIn    
        slot = spin()
        bonus = 0
        
